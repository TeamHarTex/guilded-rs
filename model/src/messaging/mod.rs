//! The chat message model.

use serde::{Deserialize, Serialize};

use crate::channel::mentions::Mentions;
use crate::datetime::Timestamp;
use crate::id::{
    marker::{ChannelMarker, MessageMarker, ServerMarker, UserMarker, WebhookMarker},
    Id,
};
pub mod deleted_message;
pub mod embed;

/// Represents a chat message.
#[derive(Clone, Debug, Deserialize, Serialize)]
#[serde(rename_all = "camelCase")]
pub struct ChatMessage {
    pub channel_id: Id<ChannelMarker>,
    pub content: String,
    pub created_at: Timestamp,
    pub created_by: Id<UserMarker>,
    pub created_by_webhook_id: Option<Id<WebhookMarker>>,
    pub embeds: Option<Vec<embed::ChatEmbed>>,
    pub id: Id<MessageMarker>,
    pub is_private: Option<bool>,
    pub is_silent: Option<bool>,
    pub mentions: Option<Mentions>,
    pub reply_message_ids: Option<Vec<Id<MessageMarker>>>,
    pub server_id: Id<ServerMarker>,
    pub r#type: ChatMessageType,
    pub updated_at: Option<Timestamp>,
}

/// Represents the type of a chat message.
#[derive(Clone, Copy, Debug, Deserialize, Serialize)]
#[serde(rename_all = "lowercase")]
pub enum ChatMessageType {
    /// A message sent by a user or a bot.
    Default,
    /// A message generated by Guilded.
    System,
}
